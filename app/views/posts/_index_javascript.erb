<script>
  bindSeeMoreLess();
  loadPosts(1);

  function bindSeeMoreLess() {
    document.querySelectorAll('.see-more').forEach(function(element) {
      element.addEventListener('click', function(e) {
        e.preventDefault();
        let postId = this.dataset.postId;
        document.getElementById(`short-body-${postId}`).classList.add('d-none');
        document.getElementById(`full-body-${postId}`).classList.remove('d-none');
      });
    });

    document.querySelectorAll('.see-less').forEach(function(element) {
      element.addEventListener('click', function(e) {
        e.preventDefault();
        let postId = this.dataset.postId;
        document.getElementById(`short-body-${postId}`).classList.remove('d-none');
        document.getElementById(`full-body-${postId}`).classList.add('d-none');
      });
    });
  }

  function loadPosts(page = 1) {
    fetch(`/api/posts?page=${page}`)
      .then(response => response.json())
      .then(data => {
        const postList = document.getElementById('post-list');
        postList.innerHTML = '';
        const currentUserEmail = "<%= current_user&.email %>";

        data.posts.forEach(post => {
          const isLong = post.body.length > 100;
          const row = document.createElement('tr');
          row.innerHTML = `
            <td><strong>${post.title}</strong></td>
            <td>
              <div id="short-body-${post.id}">
                ${post.body.length > 100 ? post.body.substring(0, 100).concat('...') : post.body}
                ${post.body.length > 100 ? `<a href="javascript:void(0)" class="see-more" data-post-id="${post.id}">${"<%= t('posts.see_more') %>"}</a>` : ''}
              </div>
              <div id="full-body-${post.id}" class="d-none">
                ${post.body}
                ${post.body.length > 100 ? `<a href="javascript:void(0)" class="see-less" data-post-id="${post.id}">${"<%= t('posts.see_less') %>"}</a>` : ''}
              </div>
            </td>
            <td>${post.user_email}</td>
            <td>${new Date(post.created_at).toLocaleDateString()}</td>
            <td>
                <button class="btn btn-secondary btn-sm" onclick="showPost(${post.id})"><%= t('posts.show') %></button>
              ${post.user_email === currentUserEmail ? `
                <button class="btn btn-primary btn-sm" onclick="editPost(${post.id})">${"<%= t('posts.edit') %>"}</button>
                <button class="btn btn-danger btn-sm" onclick="deletePost(${post.id})">${"<%= t('posts.delete') %>"}</button>` : ''}
            </td>
          `;
          postList.appendChild(row);
        });

        updatePaginationButtons(page, data.total_pages);
        bindPaginationEvents();
        bindSeeMoreLess();
      })
      .catch(error => {
        console.error('Error fetching posts:', error);
      });
  }

  function updatePaginationButtons(currentPage, totalPages) {
    const pagination = document.querySelector('.pagination');
    if (!pagination) return;

    const prevButton = pagination.querySelector('.page-item:first-child');
    prevButton.classList.toggle('disabled', currentPage === 1);
    prevButton.querySelector('.page-link').dataset.page = currentPage - 1;

    const nextButton = pagination.querySelector('.page-item:last-child');
    nextButton.classList.toggle('disabled', currentPage === totalPages);
    nextButton.querySelector('.page-link').dataset.page = currentPage + 1;


    pagination.querySelectorAll('.page-item').forEach((item, index) => {
      if (index > 0 && index < pagination.children.length - 1) {
        const page = parseInt(item.querySelector('.page-link').dataset.page, 10);
        item.classList.toggle('active', page === currentPage);
      }
    });
  }

  function bindPaginationEvents() {
    document.querySelectorAll('.page-link').forEach(function(link) {
      link.removeEventListener('click', paginationHandler);
      link.addEventListener('click', paginationHandler);
    });
  }

  function paginationHandler(event) {
    event.preventDefault();
    const page = parseInt(this.dataset.page, 10);
    const totalPages = "<%= @total_pages %>";

    if (!isNaN(page) && page >= 1 && page <= totalPages) {
      loadPosts(page);
    }
  }

  function showPost(postId) {
    window.location.href = `/posts/${postId}`;
  }

  function editPost(postId) {
    window.location.href = `/posts/${postId}/edit`;
  }

  function deletePost(postId) {
    fetch(`/api/posts/${postId}`, {
      method: 'DELETE',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      }
    })
    .then(response => {
      if (response.ok) {
        alert("<%= t('posts.deleted') %>");
        loadPosts();
      } else {
        alert("<%= t('posts.error_deleting') %>");
      }
    })
    .catch(error => {
      console.error("<%= t('posts.error_deleting') %>", error);
    });
  }
</script>
